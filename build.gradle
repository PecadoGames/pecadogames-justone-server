plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "2.8"
}

group 'ch.uzh.ifi.seal'
version '1.0.0'

sourceCompatibility = 1.13

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

springBoot {
    mainClassName = 'ch.uzh.ifi.seal.soprafs20.Application'
}

dependencies {
    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

bootJar {
    baseName = 'gs-spring-boot'
    version = '0.1.0'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    maxParallelForks = 1
}

test.finalizedBy jacocoTestReport

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/jacocoReportDir")
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

File secretPropsFile = file('./local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", project.sonarProjectKey
        property "sonar.organization", project.sonarOrganization
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.login", project.sonarToken
        property "sonar.coverage.jacoco.xmlReportPaths", ["$buildDir/jacocoReportDir/test/jacocoTestReport.xml"]
        property "sonar.cpd.exclusions", "**/entity/*.java,**/rest/dto/*.java"
    }
}

sourceSets {
    main.java.srcDirs += "build/generated/sources/annotationProcessor/java/main"
}

project.tasks["sonarqube"].dependsOn {
    test
}

defaultTasks 'bootJar', 'build'
